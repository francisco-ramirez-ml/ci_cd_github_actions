name: Deploy Flask app

on:
  push:
    branches:
      - main
      - dev
      - test

jobs:
  build:
    name: build the deployment artifacts
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
      
      - name: set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: compress files into tar.gz artifact
        run: |
          mkdir -p ../deploy
          cp -r . ../deploy
          tar -czf flask_app.tar.gz -C ../deploy .
                  
      - name: Deploy to dev server
        if: github.ref == 'refs/heads/dev'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.DEV_SERVER }}
          USER: ${{ secrets.DEV_USER}}
        run: |
          echo "**RUNNING DEV BRANCH DEPLOYMENT**"
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh $DEV_USER@$DEV_SERVER << 'EOF'
            echo 'success'
          EOF
          
        continue-on-error: false

      - name: Deploy to test server
        if: github.ref == 'refs/heads/test'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.TEST_SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.TEST_SERVER }}
          USER: ${{ secrets.TEST_USER}}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$SERVER << 'EOF'
            pkill -f "flask run" || true
            mkdir -p ~/flask_app
            rm -rf ~/flask_app/*
          EOF
          scp -o StrictHostKeyChecking=no -i private_key.pem flask_app.tar.gz $USER@$SERVER:~/
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$SERVER << 'EOF'
            mkdir -p ~/flask_app
            tar -xzf flask_app.tar.gz -C ~/flask_app
            rm flask_app.tar.gz
            cd ~/flask_app
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            nohup flask run --host=0.0.0.0 > log.txt 2>&1 &
          EOF
        continue-on-error: true

      - name: Deploy to prod server
        if: github.ref == 'refs/heads/main'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.PROD_SERVER }}
          USER: ${{ secrets.PROD_USER}}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$SERVER << 'EOF'
            pkill -f "flask run" || true
            mkdir -p ~/flask_app
            rm -rf ~/flask_app/*
          EOF
          scp -o StrictHostKeyChecking=no -i private_key.pem flask_app.tar.gz $USER@$SERVER:~/
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$SERVER << 'EOF'
            mkdir -p ~/flask_app
            tar -xzf flask_app.tar.gz -C ~/flask_app
            rm flask_app.tar.gz
            cd ~/flask_app
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            nohup flask run --host=0.0.0.0 > log.txt 2>&1 &
          EOF
        continue-on-error: true
